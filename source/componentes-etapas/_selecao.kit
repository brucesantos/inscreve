<!-- modal de Seleção -->
<div class="modal fade" id="modalSelecao" aria-hidden="true" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <div class="d-flex align-items-center gap-2">
                    <img src="componentes-etapas/icones-componentes-etapas/icone-selecao.svg" alt="Seleção">
                    <h5 class="modal-title">Seleção</h5>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-muted">Lista de duas ou mais opções, com resposta única ou múltipla.</p>
                <!-- @import 'parcial-padrao-dos-componentes' -->
                <div class="configuracoes">
                    <h3>Configurações</h3>
                    
                    <!-- Tipo de resposta -->
                    <div class="mb-3 d-flex gap-4">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="tipoResposta" id="respostaUnica" value="unica" checked>
                            <label class="form-check-label" for="respostaUnica">
                                Resposta única
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="tipoResposta" id="respostaMultipla" value="multipla">
                            <label class="form-check-label" for="respostaMultipla">
                                Resposta Múltipla
                            </label>
                        </div>
                    </div>

                    <!-- Opções -->
                    <div class="mb-3">
                        <label class="form-label">Opções</label>
                        <div id="opcoesContainer" class="opcoes-container mb-2">
                            <!-- As opções serão adicionadas aqui dinamicamente -->
                        </div>
                        <button type="button" class="btn btn-outline-primary" id="btnAdicionarOpcao">
                            Adicionar Resposta
                        </button>
                    </div>

                    <!-- Campo "Outro" -->
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="campoOutro">
                        <label class="form-check-label" for="campoOutro">
                            Outro (opção que abre um campo de texto)
                        </label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnSalvarSelecao">Salvar</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const btnSalvarSelecao = document.getElementById('btnSalvarSelecao');
    const btnAdicionarOpcao = document.getElementById('btnAdicionarOpcao');
    const opcoesContainer = document.getElementById('opcoesContainer');

    // Função para criar uma nova opção
    function criarOpcao(valor = '') {
        const opcaoDiv = document.createElement('div');
        opcaoDiv.className = 'opcao-item d-flex align-items-center gap-2 mb-2';
        opcaoDiv.innerHTML = `
            <div class="drag-handle">
                <svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect width="12" height="16" fill="none"/>
                    <path d="M2.25 13.75H3.75V12.25H2.25V13.75ZM2.25 15C1.53125 15 1 14.4688 1 13.75V12.25C1 11.5625 1.53125 11 2.25 11H3.75C4.4375 11 5 11.5625 5 12.25V13.75C5 14.4688 4.4375 15 3.75 15H2.25ZM8.25 13.75H9.75V12.25H8.25V13.75ZM8.25 15C7.53125 15 7 14.4688 7 13.75V12.25C7 11.5625 7.53125 11 8.25 11H9.75C10.4375 11 11 11.5625 11 12.25V13.75C11 14.4688 10.4375 15 9.75 15H8.25ZM2.25 7.25V8.75H3.75V7.25H2.25ZM1 8.75V7.25C1 6.5625 1.53125 6 2.25 6H3.75C4.4375 6 5 6.5625 5 7.25V8.75C5 9.46875 4.4375 10 3.75 10H2.25C1.53125 10 1 9.46875 1 8.75ZM8.25 8.75H9.75V7.25H8.25V8.75ZM8.25 10C7.53125 10 7 9.46875 7 8.75V7.25C7 6.5625 7.53125 6 8.25 6H9.75C10.4375 6 11 6.5625 11 7.25V8.75C11 9.46875 10.4375 10 9.75 10H8.25ZM2.25 2.25V3.75H3.75V2.25H2.25ZM1 3.75V2.25C1 1.5625 1.53125 1 2.25 1H3.75C4.4375 1 5 1.5625 5 2.25V3.75C5 4.46875 4.4375 5 3.75 5H2.25C1.53125 5 1 4.46875 1 3.75ZM8.25 3.75H9.75V2.25H8.25V3.75ZM8.25 5C7.53125 5 7 4.46875 7 3.75V2.25C7 1.5625 7.53125 1 8.25 1H9.75C10.4375 1 11 1.5625 11 2.25V3.75C11 4.46875 10.4375 5 9.75 5H8.25Z" fill="#9CA3AF"/>
                </svg>
            </div>
            <input type="text" class="form-control" value="${valor}" placeholder="Digite uma opção">
            <button type="button" class="btn btn-outline-danger remover-opcao">
                Remover
            </button>
        `;

        // Adicionar evento para remover opção
        opcaoDiv.querySelector('.remover-opcao').addEventListener('click', function() {
            opcaoDiv.remove();
        });

        return opcaoDiv;
    }

    // Inicializar Sortable para as opções
    new Sortable(opcoesContainer, {
        animation: 150,
        handle: '.drag-handle',
        ghostClass: 'opcao-ghost',
    });

    // Adicionar opção ao clicar no botão
    btnAdicionarOpcao.addEventListener('click', function() {
        opcoesContainer.appendChild(criarOpcao());
    });

    // Adicionar duas opções iniciais
    opcoesContainer.appendChild(criarOpcao('Sim'));
    opcoesContainer.appendChild(criarOpcao('Não'));

    // Modificar o evento de salvar para incluir as opções
    btnSalvarSelecao.addEventListener('click', function() {
        const parentCard = document.querySelector('.card-de-etapa .criar-filho.active')?.closest('.card-de-etapa');
        if (parentCard) {
            const childrenContainer = parentCard.querySelector('.children');
            
            // Coletar valores do formulário
            const pergunta = document.getElementById('pergunta').value || 'Nova pergunta';
            const campoObrigatorio = document.getElementById('campo-obrigatorio').checked;
            const ajuda = document.getElementById('ajuda').value;
            const aviso = document.getElementById('aviso').value;
            const tipoResposta = document.querySelector('input[name="tipoResposta"]:checked').value;
            const campoOutro = document.getElementById('campoOutro').checked;
            
            // Coletar opções
            const opcoes = Array.from(opcoesContainer.querySelectorAll('.opcao-item input')).map(input => input.value);
            
            // Criar template com as opções
            const inputTemplate = createInputTemplate(pergunta, tipoResposta, opcoes, campoOutro);
            
            childrenContainer.insertAdjacentHTML('beforeend', inputTemplate);
            
            if (childrenContainer && !childrenContainer.sortable) {
                Sortable.create(childrenContainer, {
                    animation: 150,
                    handle: '.drag-handle',
                    ghostClass: 'card-de-etapa-ghost',
                    chosenClass: 'card-de-etapa-chosen',
                    dragClass: 'card-de-etapa-drag',
                    group: 'nested',
                    onStart: function(evt) {
                        document.body.classList.add('dragging-card');
                    },
                    onEnd: function(evt) {
                        document.body.classList.remove('dragging-card');
                        const item = evt.item;
                        item.classList.add('highlight-card');
                        setTimeout(() => {
                            item.classList.remove('highlight-card');
                        }, 800);
                    }
                });
            }
        }

        // Fechar o modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('modalSelecao'));
        modal.hide();
    });
});
</script>

<style>
.opcao-item .drag-handle {
    cursor: move;
    color: #6c757d;
}

.opcao-ghost {
    opacity: 0.5;
    background: #f8f9fa;
}

.opcoes-container {
    min-height: 50px;
}
</style>